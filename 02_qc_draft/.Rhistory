b1=lm(y~g1)$coeff[2]
b2=lm(y~g2)$coeff[2]
b1=lm(y~g1)$coeff[2]
b2=lm(y~g2)$coeff[2]
covg=cov(g1,g2)
b1
b2
cov(g1,g2)
S=matrix(0,c(3,3))
S=matrix(0,c(3,3))
colnames(S)=rownames(S)=c("g1","g2","y")
S
S=array(0,c(3,3))
colnames(S)=rownames(S)=c("g1","g2","y")
S
S=array(0,c(3,3))
colnames(S)=rownames(S)=c("g1","g2","y")
S["g1","g1"]=var(g1)
S["g2","g2"]=var(g2)
S["y","y"]=var(y)
S["g1","g2"]=cov(g1,g2)
S["y","g1"]=b1*var(g1)
S["y","g2"]=b2*var(g2)
S[lower.tri(S)]=t(S)[lower.tri(S)]
S
S=array(0,c(3,3))
colnames(S)=rownames(S)=c("g1","g2","y")
S["g1","g1"]=var(g1)
S["g2","g2"]=var(g2)
S["y","y"]=var(y)
S["g1","g2"]=cov(g1,g2)
S["g1","y"]=b1*var(g1)
S["g2","y"]=b2*var(g2)
S[lower.tri(S)]=t(S)[lower.tri(S)]
S
var(cbind(g1,g2,y))
summary(lm(y~g1+g2))
.b(response = 3,pred=1:2,S=S)
.seb(response = 3,pred=1:2,S=S,N=N)
# conditional b1 | b2
res=lm(y~g2)$residuals
summary(lm(res~g1))
b1
.b(response = 3,pred=1:2,S=S)
summary(lm(res~g1))
.cond_b(response=3,pred=1,cond=2,S=S)
summary(lm(res~g1))
.cond_b(response=3,pred=1,cond=2,S=S)
.cond_se(response=3,pred=1,cond=2,S=S,N=N)
.cond_b(response=3,pred=1,cond=2,S=S)
.cond_se(response=3,pred=1,cond=2,S=S,N=N)
setwd("Projects/Sanger_OT_QC_sumstat/02_qc_draft/")
x=fread("QC_results.csv")
library("data.table")
x=fread("QC_results.csv")
hist(x[,2])
head(x)
x=fread("QC_results.csv",data.table=F)
hist(x[,2])
hist(x[,2],n=20)
hist(x[,2],n=30)
hist(x[,2],n=30,main="Median N ratio")
colnames(x)
x=fread("QC_results.csv",data.table=F)
x=x[,-7]
for (i in (2:ncol(x))){
hist(x[,i],n=30,main=colnames(x)[i])
}
x=fread("QC_results.csv",data.table=F)
x=x[,-7]
for (i in (2:ncol(x))){
hist(x[,i],n=30,main=colnames(x)[i])
}
IQR(x[,2])
quantile(x[,2],probs = 0.25)
quantile(x[,2],probs = 0.75)
for (i in (2:ncol(x))){
iqr=IQR(x[,i])
q25=quantile(x[,i],probs = 0.25)
q75=quantile(x[,i],probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(x[,i]<qmin | x[,i]>qmax)
print(length(ind))
}
for (i in (2:ncol(x))){
iqr=IQR(x[,i])
q25=quantile(x[,i],probs = 0.25)
q75=quantile(x[,i],probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(x[,i]<qmin | x[,i]>qmax)
print(colnames(x)[i],length(ind))
}
for (i in (2:ncol(x))){
iqr=IQR(x[,i])
q25=quantile(x[,i],probs = 0.25)
q75=quantile(x[,i],probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(x[,i]<qmin | x[,i]>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=log(x[,i])
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=log(x[,i]+min(x[,i])+1)
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=log(x[,i]+min(x[,i],n.rm=T)+1)
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=log(x[,i]+min(x[,i],na.rm=T)+1)
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
l=x[,i]
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
summary(x)
#####
i=3
print(colnames(x)[i])
table(x[,i]>=1)
table(x[,i]>=10)
x[,i]
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=1
table(ind)
x[ind,1]
ind=x[,i]>=10
table(ind)
x[ind,1]
L=NULL
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=10
table(ind)
L=c(L,x[ind,1])
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
#####
i=4
print(colnames(x)[i])
ind=x[,i]<100
table(ind)
L=c(L,x[ind,1])
L
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
summary(x)
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
#####
i=6
print(colnames(x)[i])
ind=x[,i]<(-0.1) | x[,i]>(0.1)
table(ind)
L=c(L,x[ind,1])
#####
i=7
print(colnames(x)[i])
ind=x[,i]>(0.3)
table(ind)
L=c(L,x[ind,1])
L
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
summary(x)
#####
i=9
print(colnames(x)[i])
ind=x[,i]>(1.1) | x[,i]<(0.9)
table(ind)
L=c(L,x[ind,1])
#####
i=11
print(colnames(x)[i])
ind=x[,i]>(0.1) | x[,i]<(-0.1)
table(ind)
L=c(L,x[ind,1])
length(unique(L))
unique(L)
grepl("GCST",x[,1])
table(grepl("GCST",x[,1]))
x[,1]
table(grepl("GCST",x[,1]))
table(grepl("FINNGEN",x[,1]))
table(grepl("NEAL",x[,1]))
View(x)
table(grepl("GCST",x[,1]))
table(grepl("FINNGEN",x[,1]))
table(grepl("NEALE",x[,1]))
table(grepl("SAIGE",x[,1]))
L=NULL
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=10
table(ind)
L=c(L,x[ind,1])
#####
i=4
print(colnames(x)[i])
ind=x[,i]<100
table(ind)
L=c(L,x[ind,1])
#####
i=6
print(colnames(x)[i])
ind=x[,i]<(-0.1) | x[,i]>(0.1)
table(ind)
L=c(L,x[ind,1])
summary(x)
L=NULL
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=10
table(ind)
L=c(L,x[ind,1])
#####
i=4
print(colnames(x)[i])
ind=x[,i]<100
table(ind)
L=c(L,x[ind,1])
#####
i=6
print(colnames(x)[i])
ind=x[,i]<(-0.05) | x[,i]>(0.05)
table(ind)
L=c(L,x[ind,1])
#####
i=7
print(colnames(x)[i])
ind=x[,i]>(0.3)
table(ind)
L=c(L,x[ind,1])
#####
i=9
print(colnames(x)[i])
#####
i=9
print(colnames(x)[i])
ind=x[,i]>(1.05) | x[,i]<(0.95)
table(ind)
L=c(L,x[ind,1])
#####
i=11
print(colnames(x)[i])
ind=x[,i]>(0.1) | x[,i]<(-0.1)
table(ind)
L=c(L,x[ind,1])
######
length(unique(L))
unique(L)
setwd("~/Projects/Sanger_OT_MVA/01_draft/")
source("shared_heredity.R")
gcov=read.table("gcor.csv")
gcov
gcov=read.table("gcor.csv",sep=",")
View(gcov)
gcov=read.table("gcor.csv",sep=",",header=T,index=1)
gcov=read.table("gcor.csv",sep=",",header=T,row.names=1)
gcov
gcor=as.matrix(gcor)
gcor=read.table("gcor.csv",sep=",",header=T,row.names=1)
gcor=as.matrix(gcor)
gcor
phe=read.table("phen_corr.csv",sep=",",header=T,row.names=1)
phe
phe=read.table("phen_corr.csv",sep=",",header=F)
phe
h2_table=read.table("h2.csv",sep=",",header=T)
h2_table
h2=h2_table[,2]
h2
gcov=gcor*sqrt(h2%o%h2)
gcov
h2
sqrt(h2%o%h2)
gcov=gcor*sqrt(h2%o%h2)
gcov=gcor*sqrt(h2%o%h2)
colnames(gcov)=colnames(phe)=colnames(gcor)
rownames(gcov)=rownames(phe)=rownames(gcor)
gcov
shared_heredity(CovGenTr = gcov,CorPhenTr = phe)
shared_heredity(CovGenTr = gcov,CorPhenTr = as.matrix(phe))
ls
h2
L=shared_heredity(CovGenTr = gcov,CorPhenTr = as.matrix(phe))
L$alphas
L$res
L$GIPs
L$alphas
L$alphas["OPTIM.max(Shared/Phen)",]
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
L$res
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
L$GIPs$GIP_coeff[,1]
L$res["OPTIM.max(Shared/Phen)","h2(Gen/Phen)"]
L$GIPs$H2
L$GIPs$H2["GIP1"]
L$GIPs$GIP_coeff[,1]
L$GIPs$GIP_coeff[,"GIP1"]
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
L$GIPs$GIP_coeff[,"GIP1"]
L$res["OPTIM.max(Shared/Phen)","h2(Gen/Phen)"]
L$GIPs$H2["GIP1"]
h2
0.0270+0.0091
L=shared_heredity(CorGenTr = gcor,CorPhenTr = as.matrix(phe),h2 = h2)
L$alphas["OPTIM.max(Shared/Phen)",]
#L$GIPs$GIP_coeff[,"GIP1"]
L$res["OPTIM.max(Shared/Phen)","h2(Gen/Phen)"]
setwd("Projects/Sanger_OT_QC_sumstat/02_qc_draft/")
setwd("~/Projects/Sanger_OT_QC_sumstat/02_qc_draft/")
library("data.table")
x=fread("QC_results.csv",data.table=F)
x=x[,-7]
for (i in (2:ncol(x))){
hist(x[,i],n=30,main=colnames(x)[i])
}
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-1.5*iqr
qmax=q75+1.5*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
for (i in (2:ncol(x))){
l=x[,i]
iqr=IQR(l)
q25=quantile(l,probs = 0.25)
q75=quantile(l,probs = 0.75)
qmin=q25-3*iqr
qmax=q75+3*iqr
ind=which(l<qmin | l>qmax)
print(paste(colnames(x)[i],length(ind)))
}
L=NULL
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=10
table(ind)
hist(x[,i])
hist(x[x[,i]<=5,i])
hist(x[x[,i]<=2,i])
hist(x[x[,i]<=2,i],n=30)
hist(x[x[,i]<=5,i],n=30)
hist(x[x[,i]<=10,i],n=30)
L=NULL
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=5
table(ind)
L=c(L,x[ind,1])
L
cor(x)
cor(x[,-1])
library(corplot)
install.packages("corrplot")
r
library(corrplot)
corrplot(cor(x[,-1]))
corrplot(cor(x[,-1]))
corrplot(cor(x[,-1]),method = "square")
corrplot(cor(x[,-1]),method = "square",hclust.method = "ward.D2")
summary(x)
summary(x)
summary(x[,-c(1,4,7)])
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=5
table(ind)
L=c(L,x[ind,1])
summary(x[,-c(1,4,6)])
summary(x[,-c(1)])
x[,"N"]
x[,"N"]>=1e6
x[x[,"N"]>=1e6,]
#####
i=3
print(colnames(x)[i])
ind=x[,i]>=5
table(ind)
L=c(L,x[ind,1])
#####
i=4
print(colnames(x)[i])
ind=x[,i]<100
table(ind)
L=c(L,x[ind,1])
#####
i=6
print(colnames(x)[i])
ind=x[,i]<(-0.05) | x[,i]>(0.05)
table(ind)
L=c(L,x[ind,1])
#####
i=7
print(colnames(x)[i])
ind=x[,i]>(0.3)
table(ind)
L=c(L,x[ind,1])
#####
i=9
print(colnames(x)[i])
ind=x[,i]>(1.05) | x[,i]<(0.95)
table(ind)
#####
i=11
print(colnames(x)[i])
ind=x[,i]>(0.1) | x[,i]<(-0.1)
table(ind)
L=c(L,x[ind,1])
######
length(unique(L))
